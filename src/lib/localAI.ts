export interface ChatMessage {
  id: string;
  role: 'user' | 'assistant';
  content: string;
  timestamp: Date;
  suggestions?: string[];
}

class GeminiAIService {
  private apiKey = import.meta.env.VITE_GEMINI_API_KEY;

  private getCareerPrompt(message: string): string {
    return `You are Saksham AI, the intelligent career assistant for the Saksham AI platform - India's leading AI-powered internship discovery and career guidance platform.

**ABOUT SAKSHAM AI PLATFORM:**
- **1000+ Live Internships** from top companies (Google, Microsoft, Amazon, startups)
- **AI-Powered Matching** with 50% skills weighting and company tier bonuses
- **Smart Filters** for location, salary, company size, work mode, sectors
- **Profile System** with 5-step onboarding and skill-sector mapping
- **Wishlist & Compare** features to save and analyze internships
- **Multi-language Support** (English/Hindi) with Google Translate
- **PWA App** installable on mobile with offline features
- **Government Integration** including PM Internship Scheme eligibility

**NAVIGATION COMMANDS I UNDERSTAND:**
- "Show [company] internships" ‚Üí Takes you to company page
- "Internships in [city]" ‚Üí Takes you to city-specific listings
- "[skill] internships" ‚Üí Shows skill-based opportunities
- "[sector] internships" ‚Üí Filters by industry sector
- "[title] jobs" ‚Üí Shows role-specific listings

**KEY FEATURES YOU CAN HELP WITH:**
- **Search Strategy**: Using keywords, filters, AI recommendations
- **Profile Optimization**: Completing sections for better matches [Visit Profile](/profile)
- **Resume Building**: Tips for internship applications
- **Interview Prep**: Role-specific questions and preparation
- **Skill Development**: Gap analysis and learning resources
- **Comparison Tool**: Evaluating multiple internship offers
- **Application Tracking**: Managing application status [View Applications](/applications)
- **Wishlist Management**: Save and organize favorites [My Wishlist](/wishlist)

**PLATFORM NAVIGATION:**
- **Dashboard**: Personalized recommendations and saved internships [Home](/)
- **Search & Filters**: Advanced filtering by location, salary, skills, sectors [Search](/)
- **Wishlist**: Save favorite internships for later [Wishlist](/wishlist)
- **Profile**: Complete setup for AI matching (education, skills, preferences) [Profile](/profile)
- **Applications**: Track application status and deadlines [Applications](/applications)
- **News & Events**: Latest industry updates [News](/news-events)
- **Tutorials**: Learning resources and guides [Tutorials](/tutorials)
- **Referrals**: Earn points by referring friends [Refer](/referrals)

**AI SCORING SYSTEM:**
- Skills Match: 50% weight (semantic matching)
- Company Tier: Tier 1 (12% bonus), Tier 2 (8%), Tier 3 (5%)
- Location Match: 15% weight
- Sector Alignment: 10% weight
- Stipend Range: 15% weight
- Real-time compatibility scores

**SPECIAL FEATURES:**
- **Smart Suggestions**: Type partial queries for auto-complete
- **Voice Commands**: "Show me Google internships" or "Find internships in Mumbai"
- **Quick Actions**: Use the sparkle button (‚ú®) to toggle the action menu
- **Theme Customization**: 5 color themes + light/dark mode
- **Mobile PWA**: Install as an app on your phone
- **Offline Mode**: Browse saved internships without internet

User question: ${message}

Provide helpful, specific advice about using the Saksham platform, finding internships, or career guidance. Reference platform features when relevant. Use bullet points and be practical.
When you mention a feature of the Saksham platform, include it as a markdown link like [Feature Name](/url).

Response:`;
  }

  private async generateSuggestions(message: string): Promise<string[]> {
    try {
      const prompt = `Based on the user's message: "${message}", generate 3 relevant follow-up questions that are within the scope of an AI career assistant for an internship platform. The questions should be short and concise, and formatted as a numbered list.`;
      const response = await this.generateGeminiContent(prompt);
      // The response will be a string with the questions, I need to parse them.
      // I will assume the questions are separated by newlines and have a number at the beginning.
      return response.split('\n').map(q => q.replace(/^\d+\.\s*/, '')).filter(q => q.trim() !== '');
    } catch (error) {
      console.error('Error generating suggestions with Gemini:', error);
      return []; // Return empty array on error
    }
  }

  async generateAutosuggestions(query: string): Promise<string[]> {
    if (!query.trim()) {
      return [];
    }
    
    // Try Gemini first if API key is available
    if (this.apiKey) {
      try {
        const prompt = `Based on the user's partial query: "${query}", generate 3 short, relevant questions that an AI career assistant for an internship platform could answer. The questions should be formatted as a numbered list.`;
        const response = await this.generateGeminiContent(prompt);
        return response.split('\n').map(q => q.replace(/^\d+\.\s*/, '')).filter(q => q.trim() !== '');
      } catch (error) {
        console.warn('Error generating autosuggestions with Gemini, using fallback:', error);
      }
    }
    
    // Use local fallback suggestions
    return this.getLocalAutosuggestions(query);
  }

  private fallbackResponses = {
    search: "üîç **Finding the Perfect Internship:**\n\n**Smart Search Commands:**\n‚Ä¢ Try: 'Show Google internships' ‚Üí Direct company search\n‚Ä¢ Try: 'Internships in Mumbai' ‚Üí Location-based results\n‚Ä¢ Try: 'Python developer jobs' ‚Üí Skill + role matching\n‚Ä¢ Try: 'Technology sector internships' ‚Üí Industry filtering\n\n**Search Strategy:**\n‚Ä¢ Use specific keywords (role, company, skills)\n‚Ä¢ Apply location filters for your preferred cities\n‚Ä¢ Set salary expectations using stipend filters\n‚Ä¢ Browse by sectors: Technology, Healthcare, Finance, etc.\n‚Ä¢ Look for 'AI Recommended' badges for personalized matches\n\n**Pro Tips:**\n‚Ä¢ Save interesting internships to your [Wishlist](/wishlist)\n‚Ä¢ Complete your [Profile](/profile) for better AI matching\n‚Ä¢ Use the ‚ú® button to toggle quick actions menu\n‚Ä¢ Check both 'Remote' and your city for more options\n‚Ä¢ Apply early - good internships fill up fast!\n\n**Navigation Shortcuts:**\n‚Ä¢ [Browse All Internships](/) - Main dashboard\n‚Ä¢ [My Applications](/applications) - Track your progress\n‚Ä¢ [Compare Tool](/compare) - Side-by-side analysis\n\nWhat specific type of internship are you looking for?",
    
    resume: "üìÑ **Resume Optimization for Internships:**\n\n**Structure (Keep it 1-2 pages):**\n‚Ä¢ Contact info + LinkedIn/GitHub links\n‚Ä¢ Professional summary (2-3 lines)\n‚Ä¢ Education (GPA if 3.5+, relevant coursework)\n‚Ä¢ Experience (internships, projects, part-time jobs)\n‚Ä¢ Skills (technical + soft skills)\n‚Ä¢ Achievements & certifications\n\n**Content Tips:**\n‚Ä¢ Use action verbs: 'Developed', 'Managed', 'Created'\n‚Ä¢ Quantify results: 'Increased efficiency by 30%'\n‚Ä¢ Tailor to each application\n‚Ä¢ Include relevant projects and coursework\n‚Ä¢ Highlight programming languages and tools\n\n**Common Mistakes to Avoid:**\n‚Ä¢ Generic objectives\n‚Ä¢ Spelling/grammar errors\n‚Ä¢ Irrelevant information\n‚Ä¢ Poor formatting\n\nNeed help with a specific section?",
    
    interview: "üíº **Interview Preparation Masterclass:**\n\n**Research Phase:**\n‚Ä¢ Study company's mission, values, recent news\n‚Ä¢ Understand the role requirements thoroughly\n‚Ä¢ Review your resume and prepare examples\n‚Ä¢ Research the interviewer on LinkedIn\n\n**Common Questions & STAR Method:**\n‚Ä¢ 'Tell me about yourself' - 2-minute elevator pitch\n‚Ä¢ 'Why this company/role?' - Show genuine interest\n‚Ä¢ 'Describe a challenge you overcame' - Use STAR format\n‚Ä¢ 'Where do you see yourself in 5 years?' - Show ambition\n\n**Technical Prep (if applicable):**\n‚Ä¢ Practice coding problems on LeetCode/HackerRank\n‚Ä¢ Review fundamental concepts\n‚Ä¢ Prepare to explain your projects\n‚Ä¢ Practice whiteboard coding\n\n**Questions to Ask Them:**\n‚Ä¢ 'What does a typical day look like?'\n‚Ä¢ 'What are the biggest challenges facing the team?'\n‚Ä¢ 'How do you measure success in this role?'\n‚Ä¢ 'What growth opportunities are available?'\n\nWant specific questions for your field?",
    
    skills: "üéØ **Skill Development Strategy:**\n\n**Identify Your Gaps:**\n‚Ä¢ Compare job requirements with your current skills\n‚Ä¢ Use our platform's skill matching feature\n‚Ä¢ Ask for feedback from mentors and peers\n‚Ä¢ Take online skill assessments\n\n**High-Demand Skills by Field:**\n‚Ä¢ **Tech**: Python, JavaScript, React, SQL, Git\n‚Ä¢ **Data**: Excel, SQL, Tableau, Python, Statistics\n‚Ä¢ **Design**: Figma, Adobe Creative Suite, Prototyping\n‚Ä¢ **Marketing**: Google Analytics, Social Media, SEO\n‚Ä¢ **Business**: Excel, PowerPoint, Project Management\n\n**Learning Resources:**\n‚Ä¢ **Free**: YouTube, freeCodeCamp, Coursera audits\n‚Ä¢ **Paid**: Udemy, Pluralsight, LinkedIn Learning\n‚Ä¢ **Practice**: GitHub projects, Kaggle competitions\n‚Ä¢ **Certifications**: Google, Microsoft, AWS, HubSpot\n\n**Development Plan:**\n‚Ä¢ Set SMART goals (Specific, Measurable, Achievable)\n‚Ä¢ Dedicate 1-2 hours daily to learning\n‚Ä¢ Build projects to apply new skills\n‚Ä¢ Update your profile as you progress\n\nWhat specific skills are you looking to develop?",
    
    profile: "üë§ **Profile Optimization Guide:**\n\n**Complete These Sections (Aim for 100%):**\n‚Ä¢ **Personal Info**: Professional photo, clear bio\n‚Ä¢ **Contact**: Email, phone, LinkedIn, GitHub\n‚Ä¢ **Education**: Degree, graduation year, GPA (if 3.5+)\n‚Ä¢ **Experience**: Internships, jobs, volunteer work\n‚Ä¢ **Skills**: Technical and soft skills\n‚Ä¢ **Projects**: Portfolio links and descriptions\n‚Ä¢ **Preferences**: Location, salary, work mode\n\n**Profile Writing Tips:**\n‚Ä¢ Use keywords from target job descriptions\n‚Ä¢ Write a compelling 2-3 line summary\n‚Ä¢ List skills in order of proficiency\n‚Ä¢ Include relevant coursework and projects\n‚Ä¢ Add links to your work (GitHub, portfolio)\n\n**Preferences Settings:**\n‚Ä¢ Set realistic salary expectations\n‚Ä¢ Choose multiple preferred locations\n‚Ä¢ Select company sizes you're interested in\n‚Ä¢ Pick your top 3-5 industry sectors\n\n**AI Matching Benefits:**\n‚Ä¢ Complete profiles get 3x more relevant recommendations\n‚Ä¢ Skills matching uses semantic analysis (50% weight)\n‚Ä¢ Company tier bonuses: Tier 1 (+12%), Tier 2 (+8%), Tier 3 (+5%)\n‚Ä¢ Real-time compatibility scoring\n\n**Quick Actions:**\n‚Ä¢ [Complete Your Profile](/profile) - Start optimizing now\n‚Ä¢ [View Recommendations](/) - See your matches\n‚Ä¢ [Check Applications](/applications) - Track progress\n\nNeed help with any specific section?",
    
    filters: "‚öôÔ∏è **Master Advanced Filtering:**\n\n**Location Filters:**\n‚Ä¢ Select specific cities or states\n‚Ä¢ Enable 'Remote' for work-from-home options\n‚Ä¢ Use 'Hybrid' for flexible arrangements\n‚Ä¢ Consider nearby cities for more opportunities\n\n**Compensation Filters:**\n‚Ä¢ Set minimum stipend expectations\n‚Ä¢ Consider total compensation (perks, learning)\n‚Ä¢ Factor in cost of living by location\n‚Ä¢ Don't filter too strictly initially\n\n**Company & Role Filters:**\n‚Ä¢ **Company Size**: Startup (1-50), Mid-size (51-500), Large (500+)\n‚Ä¢ **Work Mode**: On-site, Remote, Hybrid\n‚Ä¢ **Duration**: 3, 6, or 12-month internships\n‚Ä¢ **Start Date**: Immediate or future opportunities\n\n**Smart Filtering Strategy:**\n‚Ä¢ Start broad, then narrow down\n‚Ä¢ Use 2-3 filters maximum initially\n‚Ä¢ Save successful filter combinations\n‚Ä¢ Check results regularly as new internships are added\n\n**Pro Tips:**\n‚Ä¢ Combine location + sector for targeted results\n‚Ä¢ Use skill filters to match your expertise\n‚Ä¢ Enable notifications for new matches\n‚Ä¢ Review 'Featured' internships first\n\nTry different combinations to find hidden gems!",
    
    compare: "‚öñÔ∏è **Internship Comparison Strategy:**\n\n**How to Use Compare Feature:**\n‚Ä¢ Click the compare button (‚öñÔ∏è) on internship cards\n‚Ä¢ Add up to 3 internships for side-by-side analysis\n‚Ä¢ View detailed comparison in the modal\n‚Ä¢ Get AI-powered recommendations\n\n**Key Factors to Compare:**\n\n**üí∞ Compensation:**\n‚Ä¢ Base stipend amount\n‚Ä¢ Additional perks and benefits\n‚Ä¢ Potential for full-time offer\n‚Ä¢ Cost of living in that location\n\n**üìç Location & Work:**\n‚Ä¢ Commute time and costs\n‚Ä¢ Remote/hybrid flexibility\n‚Ä¢ Office culture and environment\n‚Ä¢ Networking opportunities\n\n**üéØ Learning & Growth:**\n‚Ä¢ Skill development opportunities\n‚Ä¢ Mentorship and guidance\n‚Ä¢ Project complexity and impact\n‚Ä¢ Training programs available\n\n**üè¢ Company Factors:**\n‚Ä¢ Company reputation and stability\n‚Ä¢ Team size and structure\n‚Ä¢ Career advancement paths\n‚Ä¢ Company culture fit\n\n**Decision Framework:**\n1. **Must-haves**: Non-negotiable requirements\n2. **Nice-to-haves**: Preferred but flexible\n3. **Long-term impact**: Career growth potential\n4. **Personal fit**: Culture and values alignment\n\n**Pro Tip**: Create a scoring system (1-10) for each factor and calculate weighted averages!\n\nNeed help with any specific aspects?",
    
    general: "Hi there! I'm Saksham AI, your personal career assistant! üëã\n\nI'm here to help you navigate the exciting world of internships and career growth. Whether you're just starting out or looking to level up, I've got you covered!\n\n**I can help you with:**\n‚Ä¢ Finding the perfect internship match\n‚Ä¢ Optimizing your [Profile](/profile) and resume\n‚Ä¢ Preparing for interviews like a pro\n‚Ä¢ Comparing different opportunities\n‚Ä¢ Building in-demand skills\n‚Ä¢ Navigating to specific internships\n\n**Smart Commands I Understand:**\n‚Ä¢ 'Show Google internships' ‚Üí Company-specific search\n‚Ä¢ 'Internships in Delhi' ‚Üí Location-based results\n‚Ä¢ 'Python developer jobs' ‚Üí Skill + role matching\n‚Ä¢ 'Technology sector internships' ‚Üí Industry filtering\n\n**Quick Navigation:**\n‚Ä¢ [Browse Internships](/) - Main dashboard with AI recommendations\n‚Ä¢ [My Wishlist](/wishlist) - Saved opportunities\n‚Ä¢ [Applications](/applications) - Track your progress\n‚Ä¢ [Profile Setup](/profile) - Optimize for better matches\n\n**Pro Tips:**\n‚Ä¢ Use the ‚ú® button to toggle quick actions\n‚Ä¢ Complete your profile for 3x better recommendations\n‚Ä¢ Our platform has 1000+ live internships with AI-powered matching\n‚Ä¢ Try voice commands for faster navigation\n\nWhat's on your mind today? Ask me anything about your career journey! üöÄ"
  };

  private detectIntent(message: string): keyof typeof this.fallbackResponses {
    const lowerMessage = message.toLowerCase();
    
    // Check for navigation patterns first
    if (lowerMessage.includes('show') && (lowerMessage.includes('internship') || lowerMessage.includes('job'))) return 'search';
    if (lowerMessage.includes('internships in') || lowerMessage.includes('jobs in')) return 'search';
    if (lowerMessage.includes('internships at') || lowerMessage.includes('jobs at')) return 'search';
    
    // Standard intent detection
    if (lowerMessage.includes('search') || lowerMessage.includes('find') || lowerMessage.includes('internship')) return 'search';
    if (lowerMessage.includes('resume') || lowerMessage.includes('cv') || lowerMessage.includes('portfolio')) return 'resume';
    if (lowerMessage.includes('interview') || lowerMessage.includes('preparation') || lowerMessage.includes('questions')) return 'interview';
    if (lowerMessage.includes('skill') || lowerMessage.includes('gap') || lowerMessage.includes('learn') || lowerMessage.includes('develop')) return 'skills';
    if (lowerMessage.includes('profile') || lowerMessage.includes('setup') || lowerMessage.includes('complete')) return 'profile';
    if (lowerMessage.includes('filter') || lowerMessage.includes('advanced')) return 'filters';
    if (lowerMessage.includes('compare') || lowerMessage.includes('comparison') || lowerMessage.includes('choose') || lowerMessage.includes('decide')) return 'compare';
    if (lowerMessage.includes('hello') || lowerMessage.includes('hi') || lowerMessage.includes('hey') || lowerMessage.includes('help')) return 'general';
    
    return 'general';
  }

  async sendMessage(message: string, context?: string, language?: string): Promise<any> {
    // Try Gemini first if API key is available
    if (this.apiKey) {
      try {
        const prompt = this.getCareerPrompt(message);
        const response = await this.generateGeminiContent(prompt);
        
        const suggestions = await this.generateSuggestions(message);
        return {
          response,
          suggestions,
        };
      } catch (error) {
        console.warn(`Gemini API call failed, using local fallback:`, error);
        // Fall through to local response
      }
    }
    
    // Use local fallback
    const intent = this.detectIntent(message);
    const localSuggestions = this.getLocalSuggestions(intent);
    return {
      response: this.fallbackResponses[intent],
      suggestions: localSuggestions,
    };
  }

  async generateInterviewQuestions(role: string, difficulty: 'easy' | 'medium' | 'hard' = 'medium'): Promise<string> {
    // Try Gemini first if API key is available
    if (this.apiKey) {
      try {
        const prompt = `Generate 5 ${difficulty} level interview questions for a ${role} internship position. Include both technical and behavioral questions. Format as a numbered list with brief tips.`;
        return await this.generateGeminiContent(prompt);
      } catch (error) {
        console.warn('Error generating questions with Gemini, using fallback:', error);
      }
    }
    
    // Use local fallback
    return this.getFallbackQuestions(role, difficulty);
  }
  
  async generateInternshipComparison(prompt: string): Promise<string> {
    // Try Gemini first if API key is available
    if (this.apiKey) {
      try {
        return await this.generateGeminiContent(prompt);
      } catch (error) {
        console.warn('Error generating comparison with Gemini, using fallback:', error);
      }
    }
    
    // Use local fallback for comparison
    return this.getFallbackComparison();
  }
  
  private getFallbackComparison(): string {
    return `**‚ùå AI Analysis Unavailable**\n\nUnable to generate intelligent comparison at this time.\n\n**Quick Summary:**\n‚Ä¢ Higher AI scores indicate better profile matches\n‚Ä¢ Focus on the top-ranked internship\n‚Ä¢ Consider skills alignment and location preferences\n\n*Please try again in a moment.*`;
  }

  private async generateGeminiContent(prompt: string): Promise<string> {
    // Use AI Queue Service for rate limiting and caching
    const AIQueueService = (await import('@/services/aiQueueService')).default;
    return await AIQueueService.generateResponse(prompt);
  }
  
  private async generateGeminiContentDirect(prompt: string): Promise<string> {
    const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${this.apiKey}`;
    
    const requestBody = {
      contents: [
        {
          parts: [
            {
              text: prompt,
            },
          ],
        },
      ],
      generationConfig: {
        temperature: 0.7,
        topK: 40,
        topP: 0.95,
        maxOutputTokens: 1024,
      },
      safetySettings: [
        {
          category: 'HARM_CATEGORY_HARASSMENT',
          threshold: 'BLOCK_ONLY_HIGH'
        },
        {
          category: 'HARM_CATEGORY_HATE_SPEECH',
          threshold: 'BLOCK_ONLY_HIGH'
        },
        {
          category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT',
          threshold: 'BLOCK_ONLY_HIGH'
        },
        {
          category: 'HARM_CATEGORY_DANGEROUS_CONTENT',
          threshold: 'BLOCK_ONLY_HIGH'
        }
      ]
    };

    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(requestBody),
    });

    if (!response.ok) {
      const errorData = await response.json().catch(() => ({ error: { message: 'Unknown error' } }));
      console.error('Gemini API error:', errorData);
      throw new Error(errorData.error?.message || `HTTP ${response.status}: ${response.statusText}`);
    }

    const data = await response.json();
    
    if (!data.candidates || data.candidates.length === 0) {
      console.error('Gemini API response:', data);
      throw new Error('No candidates in Gemini API response');
    }
    
    const candidate = data.candidates[0];
    
    // Handle blocked or filtered responses
    if (candidate.finishReason === 'SAFETY' || candidate.finishReason === 'RECITATION') {
      console.error('Gemini API response blocked:', candidate);
      throw new Error('Response blocked by safety filters');
    }
    
    if (!candidate.content) {
      console.error('No content in candidate:', candidate);
      throw new Error('No content in Gemini API response');
    }
    
    if (!candidate.content.parts || candidate.content.parts.length === 0) {
      console.error('No parts in content:', candidate.content);
      throw new Error('No parts in Gemini API response content');
    }
    
    let text = candidate.content.parts[0].text;
    
    if (!text) {
      console.error('No text in first part:', candidate.content.parts[0]);
      throw new Error('No text in Gemini API response part');
    }
    
    // Handle MAX_TOKENS finish reason
    if (candidate.finishReason === 'MAX_TOKENS') {
      text += '\n\n*[Response truncated due to length limit]*';
    }
    
    return text;
  }
  
  getQueueStatus(): { size: number; processing: boolean } {
    const AIQueueService = require('@/services/aiQueueService').default;
    return {
      size: AIQueueService.getQueueSize(),
      processing: AIQueueService.isProcessing()
    };
  }
  
  private getLocalSuggestions(intent: keyof typeof this.fallbackResponses): string[] {
    const suggestionMap = {
      search: ['How to filter by location?', 'Show me remote internships', 'Best companies for internships'],
      resume: ['How to write a cover letter?', 'Resume format for students', 'Common resume mistakes'],
      interview: ['How to prepare for technical interviews?', 'What to wear for interviews?', 'Questions to ask interviewer'],
      skills: ['Most in-demand skills 2024', 'How to learn programming?', 'Free online courses'],
      profile: ['How to add projects?', 'Profile completion tips', 'Privacy settings'],
      filters: ['Location-based search', 'Salary range filters', 'Company size preferences'],
      compare: ['How to save internships?', 'Comparison criteria', 'Decision making tips'],
      general: ['Platform features', 'Getting started guide', 'Success stories']
    };
    return suggestionMap[intent] || [];
  }
  
  private getLocalAutosuggestions(query: string): string[] {
    const lowerQuery = query.toLowerCase();
    if (lowerQuery.includes('intern')) return ['How to find internships?', 'Best internship websites', 'Internship application tips'];
    if (lowerQuery.includes('resume')) return ['Resume writing tips', 'Resume templates', 'Resume review checklist'];
    if (lowerQuery.includes('interview')) return ['Interview preparation', 'Common interview questions', 'Interview follow-up'];
    if (lowerQuery.includes('skill')) return ['Skill development', 'In-demand skills', 'Online learning platforms'];
    return ['Career guidance', 'Job search tips', 'Professional development'];
  }
  
  private getFallbackQuestions(role: string, difficulty: string): string {
    return `${difficulty.toUpperCase()} ${role} Interview Questions:\n\n1. Tell me about yourself and your background\n2. Why are you interested in this ${role} internship?\n3. What are your greatest strengths and weaknesses?\n4. Describe a challenging project you worked on\n5. Where do you see yourself in the next few years?\n\nTip: Use the STAR method (Situation, Task, Action, Result) for behavioral questions!`;
  }
}

export const localAIService = new GeminiAIService();

export const quickActions = [
  { id: 'search', label: 'üîç Find Internships', prompt: 'How can I search for internships on this platform?' },
  { id: 'resume', label: 'üìÑ Resume Tips', prompt: 'Give me tips to improve my resume for internship applications' },
  { id: 'interview', label: 'üíº Interview Prep', prompt: 'Help me prepare for internship interviews' },
  { id: 'skills', label: 'üéØ Skill Gap', prompt: 'How can I identify and fill skill gaps for my target role?' },
  { id: 'profile', label: 'üë§ Profile Setup', action: (navigate: any) => navigate('/profile') },
  { id: 'wishlist', label: '‚ù§Ô∏è My Wishlist', action: (navigate: any) => navigate('/wishlist') },
  { id: 'applications', label: 'üìã Applications', action: (navigate: any) => navigate('/applications') },
  { id: 'compare', label: '‚öñÔ∏è Compare Internships', prompt: 'How do I compare different internship opportunities?' }
];
