rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && request.auth.token.email == 'admin@gmail.com';
    }
    
    // User profiles - only user can access their own profile
    match /profiles/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Internships - public read, authenticated write, admin full access
    match /internships/{internshipId} {
      allow read: if true; // Public read access for browsing
      allow create: if isAuthenticated(); // Any authenticated user can create
      allow update, delete: if isAuthenticated() && 
        (resource.data.createdBy == request.auth.uid || isAdmin());
    }
    
    // Applications - only involved parties can access
    match /applications/{applicationId} {
      allow read, write: if isAuthenticated() && 
        (request.auth.uid == resource.data.candidateId || 
         request.auth.uid == resource.data.recruiterId ||
         isAdmin());
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.candidateId;
    }
    
    // Notifications - only user can access their notifications
    match /notifications/{notificationId} {
      allow read, write: if isAuthenticated() && 
        request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated();
    }
    
    // Time tracking - user's own data only
    match /timeTracking/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Wishlist - user's own wishlist only
    match /wishlists/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // User preferences/settings - user's own data only
    match /userPreferences/{userId} {
      allow read, write: if isOwner(userId);
    }
  }
}